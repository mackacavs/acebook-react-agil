{"version":3,"sources":["components/Home.js","components/Login.js","components/Register.js","components/Posts.js","components/Logout.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["Login","localStorage","getItem","to","React","Component","state","redirect","error","setRedirect","setState","renderRedirect","handleSubmit","bind","event","preventDefault","data","FormData","target","fetch","method","body","then","response","json","setItem","id","catch","className","style","width","onSubmit","this","name","type","placeholder","border","Register","htmlFor","Posts","posts","isLoaded","url","process","ACEBOOK_ENV","console","log","map","post","key","message","value","readOnly","hidden","Logout","clear","Header","props","href","App","exact","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faae182b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Login extends React.Component {\n  render() {\n    if (!localStorage.getItem('user')) {\n      return (\n        <div>\n          <Link to=\"/register\">Register</Link><br />\n          <Link to=\"/login\">Login</Link>\n        </div>\n      );\n    } else {\n      return (\n        <p>You are logged in</p>\n      )\n    }\n  }\n}\nexport default Login;\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = {\n    redirect: false,\n    error: ''\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/posts' />\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    debugger;\n    const data = new FormData(event.target);\n    const url = 'http://localhost:2000/api/v1/users';\n    const test = process.env.NODE_ENV;\n    if(process.env.NODE_ENV === 'production'){\n      url = 'https://hidden-ocean-16005.herokuapp.com/api/v1/users'\n    }\n    fetch(url, {\n      method: 'POST',\n      body: data,\n    })\n      .then(response => response.json()).then(data => {\n        localStorage.setItem('id', data.id)\n        this.setRedirect()\n        this.renderRedirect()\n      }).catch(error => {\n        this.setState({ error: 'Invalid Email/Password' })\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n      <div className=\"col-sm-4 offset-md-4 text-center\">\n        <div className=\"card border-0\" style={{width: 350 + 'px'}}>\n        <div className=\"card-body\">\n\n      <form onSubmit={this.handleSubmit}>\n        <h1 className=\"display-6\">\n               Acebook\n        </h1>\n\n        <p className=\"display-6\">\n               Discover the new social media sensation \n               acebook - \n               developed by TEAM A.G.I.L\n        </p>\n\n        <br />\n        <input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Email Address\" style={{border: 0+ 'px', width: 300 + 'px'}}/><br/>\n        <br />\n        <input id=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\" style={{border: 0+ 'px', width: 300 + 'px'}}/>\n        <br/>\n        <br />\n        {this.renderRedirect()}\n        <div className=\"text-center\">\n        <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n        </div>\n      </form>\n      <p>{this.state.error}</p>\n      </div>\n      </div>\n     </div>\n     </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = {\n    redirect: false\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/home' />\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target)\n    const url = 'http://localhost:2000/api/v1/users/new';\n  \n    if(process.env.NODE_ENV === 'production'){\n      url = 'https://hidden-ocean-16005.herokuapp.com/api/v1/users/new'\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: data,\n    }\n    ).then(response => response.json()).then(data => {\n      this.setRedirect()\n      this.renderRedirect()\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"email\">Enter your email</label>\n        <input id=\"email\" name=\"email\" type=\"email\" />\n        <label htmlFor=\"email\">Enter your password</label>\n        <input id=\"password\" name=\"password\" type=\"password\" />\n        {this.renderRedirect()}\n        <button>Login</button>\n\n      </form>\n    );\n  }\n}\n\nexport default Register;\n\n","import React, { Component } from 'react'\nclass Posts extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n    posts: []\n    }\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:2000/api/v1/posts';\n  \n    if(process.env.NODE_ENV === 'production'){\n      url = 'https://hidden-ocean-16005.herokuapp.com/api/v1/posts'\n    }\n    fetch(url, {\n      method: 'GET',\n    }\n    ).then(response => response.json())\n     .then(data => this.setState({\n       isLoaded: true,\n       posts: data}))\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const url = 'http://localhost:2000/api/v1/posts';\n  \n    if(process.env.ACEBOOK_ENV === 'production'){\n      url = 'https://hidden-ocean-16005.herokuapp.com/api/v1/posts'\n    }\n\n    fetch(url, {\n      method: 'DELETE',\n      body: data,\n    }\n    ).then(response => response.json())\n  }\n\n\n  render() {\n    const {posts} = this.state;\n      console.log(posts)\n      return (\n        <div>\n          <h1>Posts</h1>\n          {posts.map(post => (\n            <form key={post.id} onSubmit={this.handleSubmit}>\n              {post.message}\n              <input id=\"id\" name=\"id\" value={post.id} type=\"text\" readOnly hidden/>\n              <button>delete</button>\n            </form>\n          ))}\n        </div>\n      );\n  }\n }\n export default Posts;\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nclass Logout extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = {\n    redirect: false,\n    error: ''\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/' />\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    localStorage.clear()\n    this.setRedirect()\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n\n          {this.renderRedirect()}\n          <button>Logout</button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Logout;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n return (\n   <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n     <div className=\"container\">\n       <a href='/' className='navbar-brand'>Acebook</a>\n       <div>\n         <ul className=\"navbar-nav mr-auto\">\n           <li className=\"nav-item\">\n             <Link to='/' className=\"nav-link\">\n               Home\n             </Link>\n           </li>\n           <li className=\"nav-item\">\n             <Link to='/login' className=\"nav-link\">\n               login\n             </Link>\n           </li>\n           <li className=\"nav-item\">\n             <Link to='/register' className=\"nav-link\">\n               Register\n             </Link>\n           </li>\n         </ul>\n       </div>\n     </div>\n   </nav>\n )\n}\n\nexport default Header","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Posts from './components/Posts';\nimport Logout from './components/Logout';\nimport Header from './components/layout/Header'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/posts\" component={Posts} />\n            <Route exact path=\"/logout\" component={Logout} />\n          </Switch>\n          <Logout />\n        </Router>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}